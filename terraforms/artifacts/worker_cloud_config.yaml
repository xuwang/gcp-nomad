#cloud-config
coreos:
  units:
    - name: format-disk.service
      command: start
      content: |
        [Unit]
        Description=Formats the disk drive
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        Environment="LABEL=var-lib-disk"
        Environment="DEV=/dev/sdb"
        # Do not wipe the disk if it's already being used, so the docker images persistent cross reboot.
        ExecStart=-/bin/bash -c "if ! findfs LABEL=$LABEL > /tmp/label.$LABEL; \
          then wipefs -a -f $DEV && mkfs.ext4 -T news -F -L $LABEL $DEV && echo wiped; fi"
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount disk to /var/lib/docker
        Requires=format-disk.service
        After=format-disk.service
        Before=docker.service
        [Mount]
        What=/dev/sdb
        Where=/var/lib/docker
        Type=ext4
    - name: docker.service
      command: start
      drop-ins:
        - name: 60-docker-wait-for-disk.conf
          content: |
              [Unit]
              Requires=var-lib-docker.mount
              After=var-lib-dickor.mount
              [Service]
              Restart=always
              RestartSec=5
    - name: install-nomad.service
      command: start
      content: |
        [Unit]
        Description=Install Nomad
        [Service]
        Type=oneshot
        Environment="NOMAD_URL=https://releases.hashicorp.com/nomad/0.2.3/nomad_0.2.3_linux_amd64.zip"
        Environment="DES_DIR=/opt/bin/"
        ExecStart=/bin/bash -c "cd /tmp/ ; curl -sSL $NOMAD_URL -o nomad.zip && unzip nomad.zip && chmod a+x nomad \
          && mkdir -p $DES_DIR && mv nomad $DES_DIR && mkdir -p /etc/nomad.d && chmod a+w /etc/nomad.d"
    - name: nomad.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Nomad
        After=etcd2.service
        Requires=etcd2.service
        After=install-nomad.service
        Requires=install-nomad.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        ExecStart=/opt/bin/nomad agent -node-id "%H" -config /etc/nomad.d/client.hcl -servers "${nomad_servers}"
        RestartSec=5
        Restart=always
write_files:
  - path: /etc/nomad.d/client.hcl
    content: |
      # Increase log verbosity
      log_level = "DEBUG"
      datacenter = "GCP"
      region = "${region}"
      bind_addr = "0.0.0.0"
      meta = "${nomad_meta}"
      # Setup data dir
      data_dir = "/var/lib/docker/data/nomad/"

      advertise {
        # We need to specify our host's IP because we can't
        # advertise 0.0.0.0 to other nodes in our cluster.
        rpc = "$private_ipv4:4647"
      }

      client {
        enabled = true
        network_speed = 100
        options {
          "driver.raw_exec.enable" = "1"
        }
        /*
        consul {
          address = "${consul_address}"
          token = "${consul_token}"
        }
        */
      }

      # Reserve a portion of the nodes resources from being used by Nomad when placing tasks
      reserved {
        cpu = 500
        memory = 512
        disk = 1024
        reserved_ports = "22,80,8500-8600"
      }
      leave_on_interrupt = true
      leave_on_terminate = true
  - path: /etc/profile.d/alias.sh
    content: |
        alias lal="ls -al"
        alias ll="ls -l"
        alias sd="sudo systemctl"
        alias sdl="sd list-units"
        alias sds="sd status"
        alias sdcat="sd cat"
        alias j="sudo journalctl"
        alias jfu="j -f -u"
        alias dk="docker "
        alias dkc="dk ps"
        alias dkm="dk images"
        alias dki="dk inspect"
        alias dkb="dk build"
        alias dke="dk exec"
        function dkip() { docker inspect --format "{{ .NetworkSettings.IPAddress }}" $1 ; }
        function dkid() { docker inspect --format "{{ .ID }}" $1 ; }
# end of files
# end of files